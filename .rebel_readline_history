1581589395624:(require '[instaparse.core :as insta])
1581589528928:(def calculator-parser\n  (insta/parser \n   S = A + A\n   A = #'[0-9]+'))
1581589539484:(def calculator-parser\n  (insta/parser \n   "S = A + A\n   A = #'[0-9]+'"))
1581589555481:(calculator-parser "1+1")
1581589600064:(def calculator-parser\n  (insta/parser \n   "S = A O A\n   A = #'[0-9]+'\n    O = '+'"))
1581589608814:(calculator-parser "1+1")
1581590862306:(def calculator-parser\n  (insta/parser \n   "A = num <+> num\n    num = '#[0-9]+'"))
1581590902889:(def calculator-parser\n  (insta/parser \n   "sum = num <'+'> num\n    num = '#[0-9]+'"))
1581590918121:(calculator-parser "3 + 3")
1581590923612:(calculator-parser "3+3")
1581590929904:(calculator-parser "2+2")
1581590957413:(def calculator-parser\n  (insta/parser \n   "sum = num <'+'> num\n    num = #'[0-9]+'"))
1581590960146:(calculator-parser "2+2")
1581591040743:(def calculator-parser\n  (insta/parser \n   "sum = num <'+'> num\n    sub = num <'-'> num\n    num = #'[0-9]+'"))
1581591047257:(calculator-parser "2+2+2")
1581591054896:(calculator-parser "2+2")
1581591059663:(calculator-parser "2-2")
1581591122954:(def calculator-parser\n  (insta/parser \n   "exp = sum | sub\n   sum = num <'+'> num\n    sub = num <'-'> num\n    num = #'[0-9]+'"))
1581591126311:(calculator-parser "2+2")
1581591129869:(calculator-parser "2-2")
1581591142901:(calculator-parser "2-2+2")
1581591602732:(def calculator-parser\n  (insta/parser \n   "exp = sum | sub\n   sum = num <'+'> num\n    sub = num <'-'> num\n    num = #'[0-9]+' | exp"))
1581591605803:(calculator-parser "2-2+2")
1581592101052:(def calculator-parser\n  (insta/parser \n   "exp = sum-sub\n    <sum-sub> = sum | sub\n   sum = num <'+'> num\n    sub = num <'-'> num\n    num = #'[0-9]+' | exp"))
1581592103780:(calculator-parser "2-2+2")
1581592113299:(def calculator-parser\n  (insta/parser \n   "exp = sum-sub\n    <sum-sub> = sum | sub\n   sum = num <'+'> num\n    sub = num <'-'> num\n    num = #'[0-9]+' | sum-sub"))
1581592115924:(calculator-parser "2-2+2")
1581592169951:(def calculator-parser\n  (insta/parser \n   "exp = sum-sub\n    <sum-sub> = sum | sub\n   sum = num <'+'> num\n    sub = num <'-'> num\n    <num> = #'[0-9]+' | sum-sub"))
1581592172891:(calculator-parser "2-2+2")
1581592248274:(def calculator-parser\n  (insta/parser \n   "exp = sum-sub\n    <sum-sub> = sum | sub\n   sum = num <'+'> num\n    sub = num <'-'> num\n    <num> = #'[0-9]+' | sum-sub"))
1581592417627:(def calculator-parser\n  (insta/parser \n   "exp = sum-sub\n    <sum-sub> = sum | sub | mul\n    mul = num <'*'> num\n   sum = num <'+'> num\n    sub = num <'-'> num\n    <num> = #'[0-9]+' | sum-sub"))
1581592427245:(calculator-parser "2-2+2*2")
1581592544577:(def calculator-parser\n  (insta/parser \n   "exp = sum-sub\n    <sum-sub> = sum | sub | mul | div\n    mul = num <'*'> num\n    div = num <'/'> num\n   sum = num <'+'> num\n    sub = num <'-'> num\n    <num> = #'[0-9]+' | sum-sub"))
1581592550656:(calculator-parser "2-2+2*2/2")
1581592558289:(calculator-parser "2/2-2+2*2")
1581592606890:(calculator-parser "1-2/3-4+5*6")
1581592827577:(->> (calculator-parser "1+2-3*5")\n     (insta/transform \n      {:add +, :sub -, :mul *, :div /,\n        :num clojure.edn/read-string :exp identity}))
1581592857974:(->> (calculator-parser "1+2-3*5")\n     (insta/transform \n      {:sum +, :sub -, :mul *, :div /,\n        :num clojure.edn/read-string :exp identity}))
1581599826619:(def calculator-parser\n  (insta/parser \n   "exp = sum-sub\n    <sum-sub> = sum | sub | mul | div\n    mul = num <'*'> num\n    div = num <'/'> num\n   sum = num <'+'> num\n    sub = num <'-'> num\n    <num> = #'[0-9]+' | sum-sub"))
1581599961366:(clojure.edn/read-string 22)
1581599964831:(clojure.edn/read-string "22")
1581600003509:(def calculator-parser\n  (insta/parser \n   "exp = sum-sub\n    <sum-sub> = sum | sub | mul | div\n    mul = num <'*'> num\n    div = num <'/'> num\n   sum = num <'+'> num\n    sub = num <'-'> num\n    <num> = #'[0-9]+' | sum-sub"))
1581600015260:(calculator-parser "2+3+5")
1581600058829:(->> (calculator-parser "1+2-3*5")\n     (insta/transform \n      {:sum +, :sub -, :mul *, :div /,:exp identity}))
1581600082101:(->> (calculator-parser "1+2+3")\n     (insta/transform \n      {:sum +, :sub -, :mul *, :div /, :exp identity}))
1581600098624:(calculator-parser "2+3+5")
1581600111157:(+ "3" "5")
1581600118427:(->> (calculator-parser "1+2+3")\n     (insta/transform \n      {:sum +, :sub -, :mul *, :div /, :exp identity}))
1581600242796:(def calculator-parser\n  (insta/parser \n   "exp = sum-sub\n    <sum-sub> = sum | sub | mul | div\n    mul = num <'*'> num\n    div = num <'/'> num\n   sum = num <'+'> num\n    sub = num <'-'> num\n    number = #'[0-9]+'\n<num> = number | sum-sub"))
1581600245958:(->> (calculator-parser "1+2+3")\n     (insta/transform \n      {:sum +, :sub -, :mul *, :div /, :exp identity}))
1581600270859:(->> (calculator-parser "1+2+3")\n     (insta/transform \n      {:sum +, :sub -, :mul *, :div /, :exp identity, :num clojure.edn/read-string}))
1581600290582:(->> (calculator-parser "1+2+3")\n     (insta/transform \n      {:sum +, :sub -, :mul *, :div /, :exp identity, :number clojure.edn/read-string}))
1581600378238:(->> (calculator-parser "1+2*3")\n     (insta/transform \n      {:sum +, :sub -, :mul *, :div /, :exp identity, :number clojure.edn/read-string}))
